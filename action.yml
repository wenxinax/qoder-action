# action.yml

name: 'Qoder Action'
description: 'A flexible and composable GitHub Action framework for qoder-cli.'
author: 'qoder-ai'

inputs:
  scene:
    description: |
      The scenario for the action, determining built-in prompts and logic.
      - `cr`: Code Review mode. Uses built-in prompts for code analysis. Allows customization via `append_prompt`.
      - `mention`: Mention mode. Responds to user mentions in comments. Allows customization of reply style via `append_prompt`.
      - `custom`: Custom mode. Requires a `prompt` to define the task, and allows a custom `system_prompt`.
    required: true
    default: 'cr'

  append_prompt:
    description: 'For `cr` or `mention` scenes. Appends additional instructions to the built-in prompt.'
    required: false

  prompt:
    description: "Required for `custom` scene. A detailed prompt that tells qoder what to do."
    required: false
  system_prompt:
    description: "Optional for `custom` scene. A system prompt to guide the model's behavior. A default is used if not provided."
    required: false

  github_token:
    description: 'The GitHub token for authentication.'
    required: true
    default: ${{ github.token }}

  dashscope_api_key:
    description: 'The Dashscope API key for LLM services.'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Dispatcher
      id: dispatcher
      uses: ./
      with:
        scene: ${{ inputs.scene }}
        append_prompt: ${{ inputs.append_prompt }}
        prompt: ${{ inputs.prompt }}
        system_prompt: ${{ inputs.system_prompt }}
        github_token: ${{ inputs.github_token }}

    - name: Run Qoder Core Action
      id: qoder
      uses: ./qoder-core-action
      with:
        system_prompt_path: ${{ steps.dispatcher.outputs.system_prompt_path }}
        prompt_path: ${{ steps.dispatcher.outputs.prompt_file_path }}
        qoder_config_json: ${{ steps.dispatcher.outputs.qoder_config_json }}
        github_token: ${{ inputs.github_token }}
        dashscope_api_key: ${{ inputs.dashscope_api_key }}

    - name: Finalize
      if: always()
      uses: ./
      with:
        scene: ${{ inputs.scene }}
        comment_id: ${{ steps.dispatcher.outputs.comment_id }}
        job_status: ${{ job.status }}
        qoder_result: ${{ steps.qoder.outputs.result }}
        github_token: ${{ inputs.github_token }}